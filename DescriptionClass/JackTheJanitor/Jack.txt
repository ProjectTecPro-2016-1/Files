## CLASS: Jack
	Description:

### METHODS:
	```c++
	// -------------------------------------------------------------
	// Function: Jack()
	// Description: Jack class builder where the initializations of the variables happen.
	// Parameters:
	//		string filename;	Name of the file from which will be loaded Jack's image.
	// Attributes: nothing
	// Return: void
	// -------------------------------------------------------------
	Jack(std::string filename) {
		...
	}
	```

	```c++
	// -------------------------------------------------------------
	// Function: ~Jack()
	// Description: Jack class destructor in which images files free themselves.
	// Parameters: void
	// Attributes: nothing
	// Return: void
	// -------------------------------------------------------------
	~Jack() {
		...
	}
	```

	```c++
	// -------------------------------------------------------------
	// Function: setLimit()
	// Description: Jack class destructor in which images files free themselves.
	// Parameters:
	//		int value;
	//		int limit1;
	//		int range;
	// Attributes:
	//		int limit2;
	// Return: void
	// -------------------------------------------------------------
	setLimit() {
		...
	}
	```

	```c++
	// -------------------------------------------------------------
	// Function: drawSelf()
	// Description: Selects the current motion frame and draws Jack's image in specific position
	//				on the screen according to it's attributes.
	// Parameters:
	//		SDL_Surface * surface;	Pointer for surface in which graphic components will be drawn
	// Attributes: nothing
	// Return: void
	// -------------------------------------------------------------
	void drawSelf(SDL_Surface *surface)
	 {
		...
	}
	```

	```c++
	// -------------------------------------------------------------
	// Function: isDead()
	// Description:	Return the boolean variable indicating whether Jack is dead or not.
	// Parameters: void
	// Attributes: nothing
	// Return: bool
	// -------------------------------------------------------------
	bool isDead() {
		...
	}
	```

	```c++
	// -------------------------------------------------------------
	// Function: die()
	// Description:	Gives the true value to the boolean variable "dead".
	// Parameters: void
	// Attributes: nothing
	// Return: void
	// -------------------------------------------------------------
	void die() {
		...
	}
	```

	```c++
	// -------------------------------------------------------------
	// Function: setSpriteClips()
	// Description: Initializes the dimensions of each picture frame and each Jack's moviment.
	// Parameters: void
	// Attributes: nothing
	// Return: void
	// -------------------------------------------------------------
	void setSpriteClips() {
		...
	}
	```

	```c++
	// -------------------------------------------------------------
	// Function: move()
	// Description:
	// Parameters:
	//		int xBegin;		Description
	//		int xRange;		Range in X axis.
	//		int yBegin;		Description
	//		int yRange;		Range in Y axis.
	// Attributes: nothing
	// Return: void
	// -------------------------------------------------------------
	void move(int xBegin, int xRange, int yBegin, int yRange) {
		...
	}
	```

	```c++
	// -------------------------------------------------------------
	// Function: pushMove()
	// Description: Method to handle the event of Jack's movement in the horizontal.
	// Parameters:
	//		int v;		Variable related to the direction and how much Jack will walk in the horizontal.
	// Attributes: nothing
	// Return: void
	// -------------------------------------------------------------
	void pushMove(int v) {
		...
	}
	```

	```c++
	// -------------------------------------------------------------
	// Function: popMove()
	// Description:	Method to handle the event of Jack's movement in the horizontal while jumping.
	// Parameters:
	//		int v;		Variable related to the direction and how much Jack will walk in the horizontal.
	// Attributes: nothing
	// Return: void
	// -------------------------------------------------------------
	void popMove(int v) {
		...
	}
	```

	```c++
	// -------------------------------------------------------------
	// Function: jump()
	// Description:	Controls the act of jumping and its consequences with respect to the maximum
					height and possible collisions with some box.
	// Parameters:
	//		Level * level;		Description
	// Attributes: nothing
	// Return: void
	// -------------------------------------------------------------
	void jump(Level * level) {
		...
	}
	```

	```c++
	// -------------------------------------------------------------
	// Function: getXPosition()
	// Description:	Returns the current Jack's position on the X axis.
	// Parameters: void
	// Attributes: nothing
	// Return: int
	// -------------------------------------------------------------
	int getXPosition() {
		...
	}
	```

	```c++
	// -------------------------------------------------------------
	// Function: getYPosition()
	// Description:	Returns the current Jack's position on the Y axis.
	// Parameters: void
	// Attributes: nothing
	// Return: int
	// -------------------------------------------------------------
	int getYPosition() {
		...
	}
	```

	```c++
	// -------------------------------------------------------------
	// Function: pushBox()
	// Description: Does nothing.
	// Parameters: void
	// Attributes: nothing
	// Return: void
	// -------------------------------------------------------------
	void pushBox() {
		...
	}
	```

### ATRIBUTTES:
	```c++
	SDL_Surface *jack;			// Description
	int x_position;				// Description
	int y_position;				// Description
	bool dead;					// Description
	int lastMove;				// Description
	int lastButOneMove;			// Description
	int frame; //for animation	// Description
	```

### CONST:
	```c++
	static const int ACCELERATION = 1;		// Description
	static const int JACK_WIDTH = 38;		// Description
	static const int JACK_HEIGHT = 57;		// Description
	```
